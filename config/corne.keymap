/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        thl: thl {
            compatible = "zmk,behavior-hold-tap";
            label = "THL";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };
    };

    macros {
        escape_layer_reset: escape_layer_reset {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &to 0>;
            label = "ESCAPE_LAYER_RESET";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp F            &kp P                     &kp B           &kp J        &kp L                 &kp U             &kp Y    &kp BACKSPACE  &kp BSPC
&kp LCTRL  &kp A  &kp R  &hmr LEFT_ALT S  &hmr LEFT_COMMAND T       &kp G           &kp M        &hmr RIGHT_COMMAND N  &hmr RIGHT_ALT E  &kp I    &kp O          &kp SQT
&kp LSHFT  &kp X  &kp C  &kp D            &kp V                     &kp Z           &kp K        &kp H                 &kp COMMA         &kp DOT  &kp FSLH       &kp ESC
                         &kp LEFT_SHIFT   &hmr LS(LA(LCTRL)) SPACE  &lt 2 ESCAPE    &lt 3 ENTER  &sl 1                 &kp LEFT_CONTROL
            >;
        };

        Symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3       &hmr LG(LS(NUMBER_4)) NUMBER_4  &kp N5                 &kp NUMBER_6      &kp N7                &kp N8                 &kp N9             &kp COLON  &trans
&trans  &kp TAB       &kp UNDERSCORE  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE                &kp GRAVE              &kp BACKSLASH     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE           &kp ENTER  &trans
&trans  &kp TILDE     &kp EQUAL       &kp PLUS           &kp MINUS                       &kp N0                 &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &to 3      &trans
                                      &trans             &trans                          &escape_layer_reset    &trans            &to 2                 &trans
            >;
        };

        CtrlNum {
            bindings = <
&trans  &kp ESCAPE  &kp C_PLAY_PAUSE  &kp C_PREV         &kp C_NEXT         &kp MINUS              &kp KP_SUBTRACT  &kp NUMBER_7       &kp NUMBER_8      &kp NUMBER_9  &trans     &trans
&trans  &kp TAB     &trans            &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp PLUS               &kp EQUAL        &kp NUMBER_4       &kp NUMBER_5      &kp NUMBER_6  &kp ENTER  &trans
&trans  &trans      &trans            &trans             &trans             &kp KP_DOT             &kp NUMBER_0     &kp NUMBER_1       &kp NUMBER_2      &kp NUMBER_3  &trans     &trans
                                      &to 0              &kp RIGHT_CONTROL  &escape_layer_reset    &trans           &kp RIGHT_COMMAND  &kp LEFT_CONTROL
            >;
        };

        Navigate {
            bindings = <
&trans  &trans            &trans       &trans  &trans            &trans                 &kp LG(LA(LEFT))  &trans            &trans        &kp LG(LA(RIGHT))  &trans     &trans
&trans  &hmr LG(TAB) TAB  &kp LS(TAB)  &trans  &trans            &trans                 &kp LEFT          &kp DOWN          &kp UP_ARROW  &kp RIGHT          &kp ENTER  &trans
&trans  &to 4             &trans       &trans  &trans            &trans                 &trans            &trans            &trans        &trans             &trans     &trans
                                       &to 0   &kp LEFT_CONTROL  &escape_layer_reset    &trans            &kp LEFT_COMMAND  &kp LEFT_ALT
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans      &trans          &trans      &trans      &trans                 &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR  &bt BT_CLR_ALL  &bt BT_PRV  &bt BT_NXT  &trans                 &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans          &trans      &trans      &trans                 &trans  &trans  &trans  &trans  &trans  &trans
                                    &to 0       &trans      &escape_layer_reset    &trans  &trans  &trans
            >;
        };
    };
};
